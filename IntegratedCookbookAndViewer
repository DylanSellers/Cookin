<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Recipe Collection</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      display: flex;
      margin: 0;
      padding: 0;
    }
    #sidebar {
      width: 25%;
      max-width: 300px;
      background-color: #f8f8f8;
      border-right: 1px solid #ccc;
      padding: 10px;
      overflow-y: auto;
    }
    #content {
      flex-grow: 1;
      padding: 20px;
    }
    .book, .chapter {
      margin: 10px 0;
      cursor: pointer;
    }
    .chapters, .recipes {
      margin-left: 20px;
      display: none;
    }
    .recipe {
      margin-left: 20px;
      cursor: pointer;
    }
    h1 { font-size: 26px; margin-bottom: 5px; }
    p { font-size: 16px; }
    .italic { font-style: italic; }
    .bold { font-weight: bold; margin: 15px 0; }
    .right-align { text-align: right; }
  </style>
</head>
<body>
  <div id="sidebar">
    <div class="book" onclick="toggleVisibility('book1-chapters')">Kenâ€™s Recipes</div>
    <div id="book1-chapters" class="chapters"><p>Loading chapters...</p></div>
    <div class="book" onclick="toggleVisibility('book2-chapters')">Sellers Family Cookbook</div>
    <div id="book2-chapters" class="chapters"><p>Chapters not yet implemented.</p></div>
  </div>
  <div id="content">
    <h1>Welcome to the Recipe Collection</h1>
    <p>Select a book, chapter, and recipe to view details here.</p>
  </div>

  <script>
    async function fetchChapters(bookFolder, bookId) {
      const apiUrl = `https://api.github.com/repos/MelissaSellers/Test/contents/${bookFolder}`;
      try {
        const response = await fetch(apiUrl);
        if (!response.ok) throw new Error(`Failed to fetch chapters: ${response.statusText}`);
        const folders = await response.json();
        const chaptersElement = document.getElementById(bookId);
        chaptersElement.innerHTML = '';

        folders.forEach(folder => {
          if (folder.type === 'dir') {
            const chapterId = `${bookId}-${folder.name.replace(/\s+/g, '-')}`;
            chaptersElement.innerHTML += `
              <div class="chapter" onclick="toggleVisibility('${chapterId}')">${folder.name}</div>
              <div id="${chapterId}" class="recipes"></div>
            `;
            fetchRecipes(folder.path, chapterId);
          }
        });
      } catch (error) {
        console.error(error);
        document.getElementById(bookId).innerHTML = `<p>Error loading chapters</p>`;
      }
    }

    async function fetchRecipes(chapterPath, chapterId) {
      const apiUrl = `https://api.github.com/repos/MelissaSellers/Test/contents/${chapterPath}`;
      try {
        const response = await fetch(apiUrl);
        if (!response.ok) throw new Error(`Failed to fetch recipes: ${response.statusText}`);
        const files = await response.json();
        const recipesElement = document.getElementById(chapterId);
        recipesElement.innerHTML = '';

        files.forEach(file => {
          if (file.type === 'file' && file.name.endsWith('.json')) {
            recipesElement.innerHTML += `
              <div class="recipe">
                <a href="#" onclick="loadRecipe('${file.path.replace(/'/g, "\\'")}')">${file.name.replace('.json', '')}</a>
              </div>
            `;
          }
        });
      } catch (error) {
        console.error(error);
        document.getElementById(chapterId).innerHTML = `<p>Error loading recipes</p>`;
      }
    }

    function loadRecipe(filePath) {
      const url = `https://raw.githubusercontent.com/MelissaSellers/Test/main/${filePath}`;
      document.getElementById('content').innerHTML = '<p>Loading recipe...</p>';
      fetch(url)
        .then(res => {
          if (!res.ok) throw new Error(`Failed to fetch recipe: ${res.status} ${res.statusText}`);
          return res.json();
        })
        .then(data => renderRecipe(data))
        .catch(err => {
          document.getElementById("content").textContent = "Error: " + err.message;
          console.error("Fetch error:", err);
        });
    }

    function renderRecipe(data) {
      const {
        recipeName,
        recipeDescription,
        servingSize,
        ingredientList,
        recipeText
      } = data;

      const output = document.getElementById("content");
      output.innerHTML = '';

      const h1 = document.createElement("h1");
      h1.textContent = recipeName || "Untitled Recipe";

      const hr = document.createElement("hr");

      const serving = document.createElement("p");
      if (servingSize) {
        serving.textContent = `Serves: ${servingSize}`;
        serving.className = "right-align";
      }

      const desc = document.createElement("p");
      if (recipeDescription) {
        desc.innerHTML = recipeDescription.replace(/\n/g, "<br>");
        desc.className = "italic";
      }

      const ingredients = document.createElement("p");
      if (ingredientList) {
        ingredients.innerHTML = ingredientList.replace(/\n/g, "<br>");
        ingredients.className = "bold";
      }

      const instructions = document.createElement("p");
      if (recipeText) {
        instructions.innerHTML = recipeText.replace(/\n/g, "<br>");
      }

      output.appendChild(h1);
      output.appendChild(hr);
      if (servingSize) output.appendChild(serving);
      if (recipeDescription) output.appendChild(desc);
      if (ingredientList) output.appendChild(ingredients);
      if (recipeText) output.appendChild(instructions);
    }

    function toggleVisibility(elementId) {
      const element = document.getElementById(elementId);
      const siblingElements = Array.from(element.parentElement.children).filter(el => el !== element);

      siblingElements.forEach(sibling => {
        if (sibling.classList.contains('chapters') || sibling.classList.contains('recipes')) {
          sibling.style.display = 'none';
        }
      });

      element.style.display = element.style.display === 'block' ? 'none' : 'block';
    }

    window.onload = () => {
      fetchChapters("2021-02-22_Ken's Recipes", 'book1-chapters');
    };
  </script>
</body>
</html>
